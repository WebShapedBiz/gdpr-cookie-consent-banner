{"version":3,"file":"cookie-consent.umd.js","sources":["../lib/accessibility.js","../lib/cookie.js","../lib/consent.js","../lib/index.js"],"sourcesContent":["/**\n * The browser user prefers to have reduced motion.\n */\nexport function prefersReducedMotion() {\n  return window.matchMedia('(prefers-reduced-motion)').matches\n}\n","/**\n * Vanilla JavaScript cookie service plugin.\n *\n * Hardly inspired by `ngx-cookie-service`:\n * @see https://github.com/stevermeister/ngx-cookie-service/blob/master/lib/cookie-service/cookie.service.ts\n */\nexport default class Cookie {\n  static set(name, value, domain, path, maxAge = 7, secure, sameSite = 'Lax') {\n    let cookieString = encodeURIComponent(name) + '=' + JSON.stringify(value) + ';'\n\n    if (domain) {\n      cookieString += 'domain=' + domain + ';'\n    }\n\n    if (path) {\n      cookieString += 'path=' + path + ';'\n    }\n\n    if (typeof maxAge === 'number') {\n      cookieString += 'max-age=' + maxAge * 60 * 60 * 24 + ';'\n    }\n\n    if (secure) {\n      cookieString += 'secure;'\n    }\n\n    cookieString += 'sameSite=' + sameSite + ';'\n\n    document.cookie = cookieString\n  }\n\n  static get(name) {\n    let cookie = null\n\n    if (document.cookie !== '') {\n      const splitters = document.cookie.split(';')\n\n      for (let i = 0; i < splitters.length; i++) {\n        let [key, value] = splitters[i].split('=')\n        key = decodeURIComponent(key).replace(/^ /, '')\n\n        if (key === name) {\n          return JSON.parse(value)\n        }\n      }\n    }\n\n    return cookie\n  }\n\n  static getAll() {\n    let cookies = {}\n\n    if (document.cookie !== '') {\n      const splitters = document.cookie.split(';')\n\n      splitters.forEach((splitter) => {\n        let [key, value] = splitter.split('=')\n        key = decodeURIComponent(key).replace(/^ /, '')\n        value = decodeURIComponent(value)\n        cookies[key] = value\n      })\n    }\n\n    return cookies\n  }\n\n  static find(regex) {\n    let cookies = this.getAll()\n\n    if (typeof regex === 'string') {\n      regex = new RegExp(`^${regex}`, 'g')\n    }\n\n    for (const name in cookies) {\n      if (regex.test(name)) {\n        return cookies[name]\n      }\n    }\n\n    return null\n  }\n\n  static delete(name, domain, path) {\n    this.set(name, '', domain, path, 0)\n  }\n\n  static deleteAll(domain, path) {\n    const cookies = this.getAll()\n\n    for (const name in cookies) {\n      this.delete(name, domain, path)\n    }\n  }\n\n  static clear(regex, domain, path) {\n    const cookies = this.getAll()\n\n    if (typeof regex === 'string') {\n      regex = new RegExp(`^${regex}`, 'g')\n    }\n\n    for (const name in cookies) {\n      const matches = name.match(regex)\n      if (matches && matches.length > 0) {\n        this.delete(name, domain, path)\n      }\n    }\n  }\n}\n","import { prefersReducedMotion } from './accessibility'\nimport Cookie from './cookie'\n\nconst Event = {\n  // order is important here\n  ON_UPDATE: 'onUpdate',\n  ON_VALUE_CHANGED: 'onValueChange',\n  ON_ACCEPT: 'onAccept',\n  ON_REJECT: 'onReject',\n}\n\nexport default class CookieConsent {\n  constructor(options) {\n    const defaultOptions = {\n      name: 'cookie-consent',\n      banner: document.getElementById('cookiebanner'),\n      notice: document.getElementById('cookienotice'),\n      linkOnly: false,\n      onRejectEnd: () => {\n        window.location.reload()\n      },\n      onAcceptEnd: (consent) => {\n        const choices = consent.getChoices()\n        consent.saveUserOptions({ choices })\n      },\n      capabilities: [\n        {\n          name: 'functional',\n          checked: true,\n          onReject: (consent) => {\n            consent.removeUserOptions()\n          },\n          onAccept: (consent) => {\n            consent.saveUserOptions({ consented: true })\n          },\n        },\n      ],\n    }\n\n    this.options = { ...defaultOptions, ...options }\n    this.queue = [] // this will hold event hooks to run in order\n\n    if (!this.options.banner || !this.options.notice) {\n      console.error('Can not find required elements!')\n      return // no banner or notice present\n    }\n\n    this.button = {}\n    this.button.reject = this.options.banner.querySelector('.reject')\n    this.button.accept = this.options.banner.querySelector('.accept')\n\n    if (!this.button.reject || !this.button.accept) {\n      console.error('Can not find required buttons!')\n      return undefined // no buttons present\n    }\n\n    this.initEvents()\n\n    const content = this.loadUserOptions()\n\n    // console.log(JSON.stringify(content, null, 2))\n\n    if (content && content.choices) {\n      this.setChoices(content.choices)\n      this.initStartUpEvents()\n    } else {\n      this.initFields()\n    }\n\n    if (content && content.consented) {\n      this.showNotice()\n    } else {\n      this.showBanner()\n    }\n  }\n\n  /**\n   * Sync form input fields with capabilities .\n   *\n   * @returns {Choice[]} passed choices\n   */\n  initFields() {\n    const choices = this.options.capabilities.map(({ name, checked }) => ({\n      name: name,\n      value: checked,\n    }))\n    this.setChoices(choices)\n    return choices\n  }\n\n  /**\n   * Initial all element events.\n   */\n  initEvents() {\n    // Reject\n    this.button.reject.addEventListener('click', () => {\n      if (this.options.debug) console.time('reject')\n      const choices = this.initFields()\n      choices.forEach((choice) => {\n        const capability = this.getCapability(choice.name)\n        this._runValueEventsFor(capability, choice)\n        this._runEventFor(capability, Event.ON_REJECT)\n      })\n      this._startRunner()\n      this.setChoices(choices)\n      this.saveUserOptions({ choices })\n      if (this.options.onRejectEnd instanceof Function) {\n        this.options.onRejectEnd(this)\n      }\n      if (this.options.debug) console.timeEnd('reject')\n      this.hideBanner()\n      setTimeout(() => {\n        this.showNotice()\n      }, 160)\n    })\n\n    // Accept\n    this.button.accept.addEventListener('click', () => {\n      if (this.options.debug) console.time('accept')\n      const choices = this.getChoices()\n      choices.forEach((choice) => {\n        const capability = this.getCapability(choice.name)\n        this._runValueEventsFor(capability, choice)\n        if (choice.value) {\n          // is checked\n          this._runEventFor(capability, Event.ON_ACCEPT)\n        } else {\n          this._runEventFor(capability, Event.ON_REJECT)\n        }\n      })\n      this._startRunner()\n      if (this.options.onAcceptEnd instanceof Function) {\n        this.options.onAcceptEnd(this)\n      }\n      if (this.options.debug) console.timeEnd('accept')\n      this.hideBanner()\n      setTimeout(() => {\n        this.showNotice()\n      }, 160)\n    })\n\n    // Show banner\n    this.options.notice.addEventListener('click', () => {\n      this.hideNotice()\n      this.showBanner()\n    })\n  }\n\n  /**\n   * On first load fire these events.\n   */\n  initStartUpEvents() {\n    const choices = this.getChoices()\n    choices.forEach((choice) => {\n      const capability = this.getCapability(choice.name)\n      if (choice.value) {\n        // is checked\n        this._runEventFor(capability, Event.ON_ACCEPT)\n      } else {\n        this._runEventFor(capability, Event.ON_REJECT)\n      }\n      this._startRunner()\n    })\n  }\n\n  /**\n   * Get our plugin options cookies content.\n   */\n  loadUserOptions() {\n    const content = Cookie.get(this.options.name)\n    if (!content) return {}\n    return content\n  }\n\n  /**\n   * Save something to our plugin options cookie.\n   *\n   * @param {object} saveThis\n   */\n  saveUserOptions(saveThis) {\n    const oldContent = this.loadUserOptions()\n    const newContent = { ...oldContent, ...saveThis }\n    Cookie.set(this.options.name, newContent)\n  }\n\n  /**\n   * Delete all plugin options that are saved into a cookie.\n   */\n  removeUserOptions() {\n    if (Cookie.get(this.options.name)) {\n      Cookie.delete(this.options.name)\n    }\n  }\n\n  /**\n   * Get single form input choice by its input name.\n   *\n   * @param {string} byName\n   */\n  getChoice(byName) {\n    const node = this.options.banner.querySelector(`.choice [name=\"choice:${byName}\"]`)\n\n    return node.checked\n  }\n\n  /**\n   * Get form input choices.\n   */\n  getChoices() {\n    let choices = []\n\n    this.options.banner.querySelectorAll('.choice input').forEach((node) => {\n      const name = node.getAttribute('name').replace('choice:', '')\n      const value = node.checked\n      choices.push({ name, value })\n    })\n\n    return choices\n  }\n\n  /**\n   * Set form input choices. Most likely for reseting the form.\n   *\n   * @param {Choice[]} choices\n   */\n  setChoices(choices) {\n    this.options.banner.querySelectorAll('.choice input').forEach((node) => {\n      const name = node.getAttribute('name').replace('choice:', '')\n      const choice = choices.find((c) => c.name === name)\n      if (choice) {\n        node.checked = choice.value\n      }\n    })\n  }\n\n  /**\n   * Get capability by name.\n   *\n   * @param {string} name\n   */\n  getCapability(name) {\n    return this.options.capabilities.find((c) => c.name === name)\n  }\n\n  /**\n   * Smoothly show an element.\n   *\n   * @param {HTMLElement} element\n   */\n  showElement(element) {\n    if ('animate' in element && !prefersReducedMotion()) {\n      element\n        .animate([{ opacity: 0 }, { opacity: 1 }], {\n          duration: 320,\n          iterations: 1,\n        })\n        .addEventListener('finish', function onFinish() {\n          element.classList.add('visible')\n        })\n    } else {\n      element.classList.add('visible')\n    }\n  }\n\n  /**\n   * Smoothly hide an element.\n   *\n   * @param {HTMLElement} element\n   */\n  hideElement(element) {\n    if ('animate' in element && !prefersReducedMotion()) {\n      element\n        .animate([{ opacity: 1 }, { opacity: 0 }], {\n          duration: 160,\n          iterations: 1,\n        })\n        .addEventListener('finish', function onFinish() {\n          element.classList.remove('visible')\n        })\n    } else {\n      element.classList.remove('visible')\n    }\n  }\n\n  /**\n   * Hide/Show the banner.\n   */\n  hideBanner() {\n    this.hideElement(this.options.banner)\n  }\n  showBanner() {\n    this.showElement(this.options.banner)\n  }\n\n  /**\n   * Hide/Show the notice.\n   */\n  hideNotice() {\n    if (!this.options.linkOnly) {\n      this.hideElement(this.options.notice)\n    }\n  }\n  showNotice() {\n    if (!this.options.linkOnly) {\n      this.showElement(this.options.notice)\n    }\n  }\n\n  /**\n   * Add a callable event function to an queue.\n   *\n   * @param {string} name\n   * @param {function} func\n   */\n  _addToQueue(name, func) {\n    this.queue.push({ name, func })\n  }\n\n  /**\n   * Run the callable event queue.\n   */\n  _startRunner() {\n    // loop event by order\n    Object.values(Event).forEach((event) => {\n      // find callables from queue with event name\n      const callables = this.queue.filter((q) => q.name === event)\n      // call them\n      callables.forEach(({ func }) => func())\n    })\n    this.queue = [] // clear queue for new operations\n  }\n\n  /**\n   * Run one event for one capability.\n   *\n   * @param {Capability} capability\n   * @param {Event} withEvent\n   * @param {object} params\n   */\n  _runEventFor(capability, withEvent, params = {}) {\n    if (\n      capability &&\n      withEvent &&\n      capability[withEvent] &&\n      capability[withEvent] instanceof Function\n    ) {\n      this._addToQueue(withEvent, () => capability[withEvent](this, params))\n    }\n  }\n\n  /**\n   * Run common or value change/update events for one capability.\n   *\n   * @param {Capability} capability\n   * @param {Choice} withChoice\n   */\n  _runValueEventsFor(capability, withChoice) {\n    let params = {\n      choice: withChoice.value,\n    }\n\n    // on input value update\n    this._runEventFor(capability, Event.ON_UPDATE, params)\n\n    // on input value change\n    const userOptions = this.loadUserOptions()\n    // load saved cookie options choices if present\n    if (userOptions?.choices) {\n      // find current choice in saved choices\n      const choice = userOptions.choices.find((c) => c.name === withChoice.name)\n      // check against input choice value\n      const hasChanged = withChoice.value !== choice.value\n      if (hasChanged) {\n        this._runEventFor(capability, Event.ON_VALUE_CHANGED, params)\n      }\n    }\n  }\n}\n","import CookieConsent from './consent'\nimport Cookie from './cookie'\n\nimport './style.scss'\n\nCookieConsent.cookie = Cookie\n\nexport default CookieConsent\n"],"names":["prefersReducedMotion","window","matchMedia","matches","Cookie","set","name","value","domain","path","maxAge","secure","sameSite","cookieString","encodeURIComponent","JSON","stringify","document","cookie","get","splitters","split","i","length","key","decodeURIComponent","replace","parse","getAll","cookies","forEach","splitter","find","regex","this","RegExp","test","deleteAll","clear","match","Event","ON_UPDATE","ON_VALUE_CHANGED","ON_ACCEPT","ON_REJECT","CookieConsent","options","defaultOptions","banner","getElementById","notice","linkOnly","onRejectEnd","location","reload","onAcceptEnd","consent","choices","getChoices","saveUserOptions","capabilities","checked","onReject","removeUserOptions","onAccept","consented","queue","button","reject","querySelector","accept","initEvents","content","loadUserOptions","setChoices","initStartUpEvents","initFields","showNotice","showBanner","console","error","map","addEventListener","_this","debug","time","choice","capability","getCapability","_runValueEventsFor","_runEventFor","_startRunner","Function","timeEnd","hideBanner","setTimeout","hideNotice","_this2","saveThis","newContent","getChoice","byName","querySelectorAll","node","getAttribute","push","c","showElement","element","animate","opacity","duration","iterations","classList","add","hideElement","remove","_addToQueue","func","Object","values","event","_this3","filter","q","withEvent","params","_this4","withChoice","userOptions"],"mappings":"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"}