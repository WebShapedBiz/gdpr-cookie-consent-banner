{"version":3,"file":"cookie-consent.modern.js","sources":["../src/lib/accessibility.js","../src/lib/cookie.js","../src/lib/consent.js","../src/lib/index.js"],"sourcesContent":["/**\n * The browser user prefers to have reduced motion.\n */\nexport function prefersReducedMotion() {\n  return window.matchMedia('(prefers-reduced-motion)').matches\n}\n","const cookieDefaults = {\n  expires: getExpirationDate(),\n  path: '/',\n}\n\nfunction createCookieString(withOptions) {\n  return Object.keys(withOptions)\n    .map((key) => `${key}=${withOptions[key]}`)\n    .join('; ')\n}\n\nexport function getCookie(withName) {\n  const value = ('; ' + document.cookie)\n    .split(`; ${withName}=`)\n    .pop()\n    .split(';')\n    .shift()\n  if (!value || value === 'undefined') {\n    return undefined\n  } else if (['true', 'false'].includes(value)) {\n    return value === 'true'\n  }\n  return JSON.parse(value)\n}\n\nexport function getAllCookies() {\n  const strings = document.cookie.split('; ')\n  const cookies = strings.map((str) => {\n    const [key, value] = str.split('=')\n    return { key, value }\n  })\n  return cookies\n}\n\nexport function setCookie(withName, andValue, andOptions) {\n  let options = {}\n  options[withName] = JSON.stringify(andValue)\n  options = { ...options, ...cookieDefaults, ...andOptions }\n  options = createCookieString(options)\n  document.cookie = options\n}\n\nexport function removeCookie(withName, andOptions) {\n  let options = {}\n  options[withName] = ''\n  options['max-age'] = 0\n  options.path = cookieDefaults.path\n  options = { ...options, ...andOptions }\n  options.expires = new Date('1996-06-13')\n  options = createCookieString(options)\n  setCookie(withName, options)\n}\n\nexport function clearCookies(thatMatch, withOptions) {\n  const allCookies = getAllCookies()\n  const regex = new RegExp(`^${thatMatch}`, 'g')\n  allCookies.forEach(({ key }) => {\n    if (key.match(regex)) {\n      removeCookie(key, withOptions)\n    }\n  })\n}\n\nexport function findCookie(thatMatch) {\n  const allCookies = getAllCookies()\n  const regex = new RegExp(`^${thatMatch}`, 'g')\n  const cookie = allCookies.find(({ key }) => regex.test(key))\n  return cookie || null\n}\n\nexport function getExpirationDate(expiringDays = 365) {\n  const expireDate = new Date()\n  expireDate.setTime(expireDate.getTime() + expiringDays * 24 * 60 * 60 * 1000)\n  return expireDate\n}\n","import { prefersReducedMotion } from './accessibility'\nimport { getCookie, setCookie, removeCookie } from './cookie'\n\nconst Event = {\n  // order is important here\n  ON_UPDATE: 'onUpdate',\n  ON_VALUE_CHANGED: 'onValueChange',\n  ON_ACCEPT: 'onAccept',\n  ON_REJECT: 'onReject',\n}\n\nexport default class CookieConsent {\n  constructor(options) {\n    const defaultOptions = {\n      debug: false,\n      name: 'cookie-consent',\n      banner: document.getElementById('cookiebanner'),\n      notice: document.getElementById('cookienotice'),\n      linkOnly: false,\n      onRejectEnd: () => {\n        window.location.reload()\n      },\n      onAcceptEnd: (consent) => {\n        const choices = consent.getChoices()\n        consent.saveUserOptions({ choices })\n      },\n      capabilities: [\n        {\n          name: 'functional',\n          checked: true,\n          onReject: (consent) => {\n            consent.removeUserOptions()\n          },\n          onAccept: (consent) => {\n            consent.saveUserOptions({ consented: true })\n          },\n        },\n      ],\n    }\n\n    this.options = { ...defaultOptions, ...options }\n    this.queue = [] // this will hold event hooks to run in order\n\n    if (!this.options.banner || !this.options.notice) {\n      console.error('Can not find required elements!')\n      return // no banner or notice present\n    }\n\n    this.button = {}\n    this.button.reject = this.options.banner.querySelector('.reject')\n    this.button.accept = this.options.banner.querySelector('.accept')\n\n    if (!this.button.reject || !this.button.accept) {\n      console.error('Can not find required buttons!')\n      return undefined // no buttons present\n    }\n\n    this.initEvents()\n\n    const content = this.loadUserOptions()\n\n    // console.log(JSON.stringify(content, null, 2))\n\n    if (content && content.choices) {\n      this.setChoices(content.choices)\n      this.initStartUpEvents()\n    } else {\n      this.initFields()\n    }\n\n    if (content && content.consented) {\n      this.showNotice()\n    } else {\n      this.showBanner()\n    }\n  }\n\n  /**\n   * Sync form input fields with capabilities .\n   *\n   * @returns {Choice[]} passed choices\n   */\n  initFields() {\n    const choices = this.options.capabilities.map(({ name, checked }) => ({\n      name: name,\n      value: checked,\n    }))\n    this.setChoices(choices)\n    return choices\n  }\n\n  /**\n   * Initial all element events.\n   */\n  initEvents() {\n    // Reject\n    this.button.reject.addEventListener('click', () => {\n      if (this.options.debug) console.time('reject')\n      const choices = this.initFields()\n      choices.forEach((choice) => {\n        const capability = this.getCapability(choice.name)\n        this._runValueEventsFor(capability, choice)\n        this._runEventFor(capability, Event.ON_REJECT)\n      })\n      this._startRunner()\n      this.setChoices(choices)\n      this.saveUserOptions({ choices })\n      if (this.options.onRejectEnd instanceof Function) {\n        this.options.onRejectEnd(this)\n      }\n      if (this.options.debug) console.timeEnd('reject')\n      this.hideBanner()\n      setTimeout(() => {\n        this.showNotice()\n      }, 160)\n    })\n\n    // Accept\n    this.button.accept.addEventListener('click', () => {\n      if (this.options.debug) console.time('accept')\n      const choices = this.getChoices()\n      choices.forEach((choice) => {\n        const capability = this.getCapability(choice.name)\n        this._runValueEventsFor(capability, choice)\n        this._runEventFor(capability, Event.ON_ACCEPT)\n      })\n      this._startRunner()\n      if (this.options.onAcceptEnd instanceof Function) {\n        this.options.onAcceptEnd(this)\n      }\n      if (this.options.debug) console.timeEnd('accept')\n      this.hideBanner()\n      setTimeout(() => {\n        this.showNotice()\n      }, 160)\n    })\n\n    // Show banner\n    this.options.notice.addEventListener('click', () => {\n      this.hideNotice()\n      this.showBanner()\n    })\n  }\n\n  /**\n   * On first load fire these events.\n   */\n  initStartUpEvents() {\n    const choices = this.getChoices()\n    choices.forEach((choice) => {\n      const capability = this.getCapability(choice.name)\n      if (choice.value) {\n        // is checked\n        this._runEventFor(capability, Event.ON_ACCEPT)\n      } else {\n        this._runEventFor(capability, Event.ON_REJECT)\n      }\n      this._startRunner()\n    })\n  }\n\n  /**\n   * Get our plugin options cookies content.\n   */\n  loadUserOptions() {\n    const content = getCookie(this.options.name)\n    if (!content) return null\n    return content\n  }\n\n  /**\n   * Save something to our plugin options cookie.\n   *\n   * @param {object} saveThis\n   */\n  saveUserOptions(saveThis) {\n    const oldContent = getCookie(this.options.name)\n    const newContent = { ...oldContent, ...saveThis }\n    setCookie(this.options.name, newContent)\n  }\n\n  /**\n   * Delete all plugin options that are saved into a cookie.\n   */\n  removeUserOptions() {\n    if (getCookie(this.options.name)) {\n      removeCookie(this.options.name)\n    }\n  }\n\n  /**\n   * Get single form input choice by its input name.\n   *\n   * @param {string} byName\n   */\n  getChoice(byName) {\n    const node = this.options.banner.querySelector(`.choice [name=\"choice:${byName}\"]`)\n\n    return node.checked\n  }\n\n  /**\n   * Get form input choices.\n   */\n  getChoices() {\n    let choices = []\n\n    this.options.banner.querySelectorAll('.choice input').forEach((node) => {\n      const name = node.getAttribute('name').replace('choice:', '')\n      const value = node.checked\n      choices.push({ name, value })\n    })\n\n    return choices\n  }\n\n  /**\n   * Set form input choices. Most likely for reseting the form.\n   *\n   * @param {Choice[]} choices\n   */\n  setChoices(choices) {\n    this.options.banner.querySelectorAll('.choice input').forEach((node) => {\n      const name = node.getAttribute('name').replace('choice:', '')\n      const choice = choices.find((c) => c.name === name)\n      if (choice) {\n        node.checked = choice.value\n      }\n    })\n  }\n\n  /**\n   * Get capability by name.\n   *\n   * @param {string} name\n   */\n  getCapability(name) {\n    return this.options.capabilities.find((c) => c.name === name)\n  }\n\n  /**\n   * Smoothly show an element.\n   *\n   * @param {HTMLElement} element\n   */\n  showElement(element) {\n    if ('animate' in element && !prefersReducedMotion()) {\n      element\n        .animate([{ opacity: 0 }, { opacity: 1 }], {\n          duration: 320,\n          iterations: 1,\n        })\n        .addEventListener('finish', function onFinish() {\n          element.classList.add('visible')\n        })\n    } else {\n      element.classList.add('visible')\n    }\n  }\n\n  /**\n   * Smoothly hide an element.\n   *\n   * @param {HTMLElement} element\n   */\n  hideElement(element) {\n    if ('animate' in element && !prefersReducedMotion()) {\n      element\n        .animate([{ opacity: 1 }, { opacity: 0 }], {\n          duration: 160,\n          iterations: 1,\n        })\n        .addEventListener('finish', function onFinish() {\n          element.classList.remove('visible')\n        })\n    } else {\n      element.classList.remove('visible')\n    }\n  }\n\n  /**\n   * Hide/Show the banner.\n   */\n  hideBanner() {\n    this.hideElement(this.options.banner)\n  }\n  showBanner() {\n    this.showElement(this.options.banner)\n  }\n\n  /**\n   * Hide/Show the notice.\n   */\n  hideNotice() {\n    if (!this.options.linkOnly) {\n      this.hideElement(this.options.notice)\n    }\n  }\n  showNotice() {\n    if (!this.options.linkOnly) {\n      this.showElement(this.options.notice)\n    }\n  }\n\n  /**\n   * Add a callable event function to an queue.\n   *\n   * @param {string} name\n   * @param {function} func\n   */\n  _addToQueue(name, func) {\n    this.queue.push({ name, func })\n  }\n\n  /**\n   * Run the callable event queue.\n   */\n  _startRunner() {\n    // loop event by order\n    Object.values(Event).forEach((event) => {\n      // find callables from queue with event name\n      const callables = this.queue.filter((q) => q.name === event)\n      // call them\n      callables.forEach(({ func }) => func())\n    })\n    this.queue = [] // clear queue for new operations\n  }\n\n  /**\n   * Run one event for one capability.\n   *\n   * @param {Capability} capability\n   * @param {Event} withEvent\n   * @param {object} params\n   */\n  _runEventFor(capability, withEvent, params = {}) {\n    if (\n      capability &&\n      withEvent &&\n      capability[withEvent] &&\n      capability[withEvent] instanceof Function\n    ) {\n      this._addToQueue(withEvent, () => capability[withEvent](this, params))\n      if (this.options.debug) {\n        console.info(`[CookieConsent]: Added ${capability.name}.${withEvent} to queue`)\n      }\n    } else {\n      if (this.options.debug) {\n        console.warn(\n          `[CookieConsent]: Capability ${capability.name} has no event of name ${withEvent}`\n        )\n      }\n    }\n  }\n\n  /**\n   * Run common or value change/update events for one capability.\n   *\n   * @param {Capability} capability\n   * @param {Choice} withChoice\n   */\n  _runValueEventsFor(capability, withChoice) {\n    let params = {\n      choice: withChoice.value,\n    }\n\n    // on input value update\n    this._runEventFor(capability, Event.ON_UPDATE, params)\n\n    // on input value change\n    const userOptions = this.loadUserOptions()\n    // load saved cookie options choices if present\n    if (userOptions?.choices) {\n      // find current choice in saved choices\n      const choice = userOptions.choices.find((c) => c.name === withChoice.name)\n      // check against input choice value\n      const hasChanged = withChoice.value !== choice.value\n      if (hasChanged) {\n        this._runEventFor(capability, Event.ON_VALUE_CHANGED, params)\n      }\n    }\n  }\n}\n","import CookieConsent from './consent'\nimport * as CookieService from './cookie'\n\nimport '../style.scss'\n\nCookieConsent.cookieService = CookieService\n\nexport default CookieConsent\n"],"names":["prefersReducedMotion","window","matchMedia","matches","cookieDefaults","expires","getExpirationDate","path","createCookieString","withOptions","Object","keys","map","key","join","getCookie","withName","value","document","cookie","split","pop","shift","includes","JSON","parse","getAllCookies","str","setCookie","andValue","andOptions","options","stringify","removeCookie","Date","expiringDays","expireDate","setTime","getTime","thatMatch","allCookies","regex","RegExp","forEach","match","find","test","Event","ON_UPDATE","ON_VALUE_CHANGED","ON_ACCEPT","ON_REJECT","CookieConsent","defaultOptions","debug","name","banner","getElementById","notice","linkOnly","onRejectEnd","location","reload","onAcceptEnd","consent","choices","getChoices","saveUserOptions","capabilities","checked","onReject","removeUserOptions","onAccept","consented","this","queue","button","reject","querySelector","accept","initEvents","content","loadUserOptions","setChoices","initStartUpEvents","initFields","showNotice","showBanner","console","error","addEventListener","_this","time","choice","capability","getCapability","_runValueEventsFor","_runEventFor","_startRunner","Function","timeEnd","hideBanner","setTimeout","hideNotice","_this2","saveThis","newContent","getChoice","byName","querySelectorAll","node","getAttribute","replace","push","c","showElement","element","animate","opacity","duration","iterations","classList","add","hideElement","remove","_addToQueue","func","values","event","_this3","filter","q","withEvent","params","_this4","info","warn","withChoice","userOptions","cookieService","CookieService"],"mappings":"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"}