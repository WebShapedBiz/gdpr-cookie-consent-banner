{"version":3,"sources":["webpack:////Users/marvinheilemann/Development/CookieConsent/node_modules/.pnpm/registry.npmjs.org/copy-text-to-clipboard/2.1.1/node_modules/copy-text-to-clipboard/index.js","webpack:////Users/marvinheilemann/Development/CookieConsent/node_modules/.pnpm/registry.npmjs.org/prism-react-renderer/1.0.2/node_modules/prism-react-renderer/dist/index.js","webpack:////Users/marvinheilemann/Development/CookieConsent/node_modules/.pnpm/registry.npmjs.org/prism-react-renderer/1.0.2/node_modules/prism-react-renderer/prism/index.js","webpack:////Users/marvinheilemann/Development/CookieConsent/node_modules/.pnpm/registry.npmjs.org/prism-react-renderer/1.0.2/node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack:///./components/button/index.js","webpack:///./components/code/themes.js","webpack:///./components/code/index.js","webpack:///./utils/normalize.js","webpack:///./routes/home/index.js","webpack:///./routes/home/examples/html.js","webpack:///./routes/home/examples/javascript.js","webpack:///./components/code/style.scss"],"names":["copyTextToClipboard","input","element","document","createElement","previouslyFocusedElement","activeElement","value","setAttribute","style","contain","position","left","fontSize","selection","getSelection","originalRange","rangeCount","getRangeAt","body","append","select","selectionStart","selectionEnd","length","isSuccess","execCommand","_","remove","removeAllRanges","addRange","focus","module","exports","default","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","objectWithoutProperties","exclude","k","indexOf","uniqueId","Token","Prism","util","encode","tokens","type","content","alias","map","replace","o","toString","match","objId","clone","visited","forEach","v","languages","extend","id","redef","lang","insertBefore","inside","before","insert","root","grammar","newToken","ret","token","DFS","callback","plugins","highlight","text","language","env","code","tokenize","stringify","matchGrammar","strarr","index","startPos","oneshot","patterns","j","pattern","lookbehind","greedy","lookbehindLength","global","flags","RegExp","pos","str","lastIndex","exec","from","to","p","len","delNum","slice","after","args","push","wrapped","Array","splice","hooks","add","rest","matchedStr","parent","join","tag","classes","attributes","aliases","keys","name","markup","tagName","includedCdataInside","def","xml","html","mathml","svg","envVars","insideString","bash","variable","toBeCopied","shell","clike","punctuation","c","cpp","string","css","addInlined","selector","javascript","js","jsx","stringifyToken","walkTokens","openedTags","notTagNorBrace","pop","openedBraces","plainText","javaDocLike","javadoclike","docLanguage","definition","isArray","l","docCommentSupport","addSupport","keywords","className","java","function","getPlaceholder","toUpperCase","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","placeholder","tokenizePlaceholders","t","s","substring","middle","replacement","concat","php","string_interpolation","test","parameterPrefix","jsdoc","actionscript","comment","interpolation","coffeescript","coffee","unshift","maybeClassNameTokens","flow","keyword","n4js","n4jsd","typescript","ts","createTemplate","templateLiteralPattern","counter","tokenizeWithHooks","run","tokenizeInterpolationExpression","expression","tempGrammar","interpolationPunctuationObject","interpolationObject","tokenizeEmbedded","_tokens","interpolationPattern","placeholderCounter","placeholderMap","embeddedTokens","interpolationExpression","placeholders","afterTokens","stringContent","templateString","filter","Boolean","supportedLanguages","findTemplateStrings","embedded","graphql","createInline","starAlternative","inner","tableCell","tableRow","tableLine","markdown","codeLang","codeBlock","trim","split","toLowerCase","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","getElementById","innerHTML","textContent","md","diff","PREFIXES","prefix","git","go","handlebars","json","less","makefile","objectivec","ocaml","python","py","reason","sass","atrule","operator","important","property","scss","sql","stylus","func","tsx","wasm","yaml","yml","theme","plain","backgroundColor","color","styles","types","opacity","textDecorationLine","fontStyle","fontWeight","defaultProps","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","create","themeDict","reduce","acc","themeEntry","includes","accStyle","Highlight","Component","this$1","props","undefined","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","children","getStyleForToken","__proto__","constructor","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","Button","button","lightTheme","Code","copyState","setCopyState","useState","copyCode","copy","setTimeout","highlightProps","htmlString","removeTrailing","leftTrim","rightTrim","removeInitialLineFeed","tabsToSpaces","indent","normalize","linesTokened","linesNumbered","renderTokens","globalStyle","numbers","actions","onClick","onKeyPress","Home","page"],"mappings":"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","file":"route-home.chunk.25059.esm.js","sourcesContent":["'use strict';\n\nconst copyTextToClipboard = input => {\n\tconst element = document.createElement('textarea');\n\tconst previouslyFocusedElement = document.activeElement;\n\n\telement.value = input;\n\n\t// Prevent keyboard from showing on mobile\n\telement.setAttribute('readonly', '');\n\n\telement.style.contain = 'strict';\n\telement.style.position = 'absolute';\n\telement.style.left = '-9999px';\n\telement.style.fontSize = '12pt'; // Prevent zooming on iOS\n\n\tconst selection = document.getSelection();\n\tlet originalRange = false;\n\tif (selection.rangeCount > 0) {\n\t\toriginalRange = selection.getRangeAt(0);\n\t}\n\n\tdocument.body.append(element);\n\telement.select();\n\n\t// Explicit selection workaround for iOS\n\telement.selectionStart = 0;\n\telement.selectionEnd = input.length;\n\n\tlet isSuccess = false;\n\ttry {\n\t\tisSuccess = document.execCommand('copy');\n\t} catch (_) {}\n\n\telement.remove();\n\n\tif (originalRange) {\n\t\tselection.removeAllRanges();\n\t\tselection.addRange(originalRange);\n\t}\n\n\t// Get the focus back on the previously focused element, if any\n\tif (previouslyFocusedElement) {\n\t\tpreviouslyFocusedElement.focus();\n\t}\n\n\treturn isSuccess;\n};\n\nmodule.exports = copyTextToClipboard;\n// TODO: Remove this for the next major release\nmodule.exports.default = copyTextToClipboard;\n","import Prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\n\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: Prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function (line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function (types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function (tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function (theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n\n  return target;\n}\n\nvar Highlight =\n/*@__PURE__*/\nfunction (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? Prism.tokenize(code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };\n","/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\n\n/**\r\n * prism-react-renderer:\r\n * This file has been modified to remove:\r\n * - globals and window dependency\r\n * - worker support\r\n * - highlightAll and other element dependent methods\r\n * - _.hooks helpers\r\n * - UMD/node-specific hacks\r\n * It has also been run through prettier\r\n */\nvar Prism = function () {\n  var uniqueId = 0;\n  var _ = {\n    util: {\n      encode: function (tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n        } else if (_.util.type(tokens) === \"Array\") {\n          return tokens.map(_.util.encode);\n        } else {\n          return tokens.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/\\u00a0/g, \" \");\n        }\n      },\n      type: function (o) {\n        return Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n      },\n      objId: function (obj) {\n        if (!obj[\"__id\"]) {\n          Object.defineProperty(obj, \"__id\", {\n            value: ++uniqueId\n          });\n        }\n\n        return obj[\"__id\"];\n      },\n      // Deep clone a language definition (e.g. to extend it)\n      clone: function (o, visited) {\n        var type = _.util.type(o);\n\n        visited = visited || {};\n\n        switch (type) {\n          case \"Object\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = {};\n            visited[_.util.objId(o)] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = _.util.clone(o[key], visited);\n              }\n            }\n\n            return clone;\n\n          case \"Array\":\n            if (visited[_.util.objId(o)]) {\n              return visited[_.util.objId(o)];\n            }\n\n            var clone = [];\n            visited[_.util.objId(o)] = clone;\n            o.forEach(function (v, i) {\n              clone[i] = _.util.clone(v, visited);\n            });\n            return clone;\n        }\n\n        return o;\n      }\n    },\n    languages: {\n      extend: function (id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\r\n       * Insert a token before another token in a language literal\r\n       * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n       * we cannot just provide an object, we need anobject and a key.\r\n       * @param inside The key (or language id) of the parent\r\n       * @param before The key to insert before. If not provided, the function appends instead.\r\n       * @param insert Object with the key/value pairs to insert\r\n       * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n       */\n      insertBefore: function (inside, before, insert, root) {\n        root = root || _.languages;\n        var grammar = root[inside];\n\n        if (arguments.length == 2) {\n          insert = arguments[1];\n\n          for (var newToken in insert) {\n            if (insert.hasOwnProperty(newToken)) {\n              grammar[newToken] = insert[newToken];\n            }\n          }\n\n          return grammar;\n        }\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            ret[token] = grammar[token];\n          }\n        } // Update references in other language definitions\n\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === root[inside] && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return root[inside] = ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function (o, callback, type, visited) {\n        visited = visited || {};\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n\n            if (_.util.type(o[i]) === \"Object\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, null, visited);\n            } else if (_.util.type(o[i]) === \"Array\" && !visited[_.util.objId(o[i])]) {\n              visited[_.util.objId(o[i])] = true;\n\n              _.languages.DFS(o[i], callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    highlight: function (text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      env.tokens = _.tokenize(env.code, env.grammar);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    matchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n      var Token = _.Token;\n\n      for (var token in grammar) {\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n          continue;\n        }\n\n        if (token == target) {\n          return;\n        }\n\n        var patterns = grammar[token];\n        patterns = _.util.type(patterns) === \"Array\" ? patterns : [patterns];\n\n        for (var j = 0; j < patterns.length; ++j) {\n          var pattern = patterns[j],\n              inside = pattern.inside,\n              lookbehind = !!pattern.lookbehind,\n              greedy = !!pattern.greedy,\n              lookbehindLength = 0,\n              alias = pattern.alias;\n\n          if (greedy && !pattern.pattern.global) {\n            // Without the global flag, lastIndex won't work\n            var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n            pattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n          }\n\n          pattern = pattern.pattern || pattern; // Don’t cache length as it changes during the loop\n\n          for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n            var str = strarr[i];\n\n            if (strarr.length > text.length) {\n              // Something went terribly wrong, ABORT, ABORT!\n              return;\n            }\n\n            if (str instanceof Token) {\n              continue;\n            }\n\n            if (greedy && i != strarr.length - 1) {\n              pattern.lastIndex = pos;\n              var match = pattern.exec(text);\n\n              if (!match) {\n                break;\n              }\n\n              var from = match.index + (lookbehind ? match[1].length : 0),\n                  to = match.index + match[0].length,\n                  k = i,\n                  p = pos;\n\n              for (var len = strarr.length; k < len && (p < to || !strarr[k].type && !strarr[k - 1].greedy); ++k) {\n                p += strarr[k].length; // Move the index i to the element in strarr that is closest to from\n\n                if (from >= p) {\n                  ++i;\n                  pos = p;\n                }\n              } // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\n\n              if (strarr[i] instanceof Token) {\n                continue;\n              } // Number of tokens to delete and replace with the new match\n\n\n              delNum = k - i;\n              str = text.slice(pos, p);\n              match.index -= pos;\n            } else {\n              pattern.lastIndex = 0;\n              var match = pattern.exec(str),\n                  delNum = 1;\n            }\n\n            if (!match) {\n              if (oneshot) {\n                break;\n              }\n\n              continue;\n            }\n\n            if (lookbehind) {\n              lookbehindLength = match[1] ? match[1].length : 0;\n            }\n\n            var from = match.index + lookbehindLength,\n                match = match[0].slice(lookbehindLength),\n                to = from + match.length,\n                before = str.slice(0, from),\n                after = str.slice(to);\n            var args = [i, delNum];\n\n            if (before) {\n              ++i;\n              pos += before.length;\n              args.push(before);\n            }\n\n            var wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n            args.push(wrapped);\n\n            if (after) {\n              args.push(after);\n            }\n\n            Array.prototype.splice.apply(strarr, args);\n\n            if (delNum != 1) {\n              _.matchGrammar(text, strarr, grammar, i, pos, true, token);\n            }\n\n            if (oneshot) {\n              break;\n            }\n          }\n        }\n      }\n    },\n    hooks: {\n      add: function () {}\n    },\n    tokenize: function (text, grammar, language) {\n      var strarr = [text];\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      _.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n      return strarr;\n    }\n  };\n\n  var Token = _.Token = function (type, content, alias, matchedStr, greedy) {\n    this.type = type;\n    this.content = content;\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || \"\").length | 0;\n    this.greedy = !!greedy;\n  };\n\n  Token.stringify = function (o, language, parent) {\n    if (typeof o == \"string\") {\n      return o;\n    }\n\n    if (_.util.type(o) === \"Array\") {\n      return o.map(function (element) {\n        return Token.stringify(element, language, o);\n      }).join(\"\");\n    }\n\n    var env = {\n      type: o.type,\n      content: Token.stringify(o.content, language, parent),\n      tag: \"span\",\n      classes: [\"token\", o.type],\n      attributes: {},\n      language: language,\n      parent: parent\n    };\n\n    if (o.alias) {\n      var aliases = _.util.type(o.alias) === \"Array\" ? o.alias : [o.alias];\n      Array.prototype.push.apply(env.classes, aliases);\n    }\n\n    var attributes = Object.keys(env.attributes).map(function (name) {\n      return name + '=\"' + (env.attributes[name] || \"\").replace(/\"/g, \"&quot;\") + '\"';\n    }).join(\" \");\n    return \"<\" + env.tag + ' class=\"' + env.classes.join(\" \") + '\"' + (attributes ? \" \" + attributes : \"\") + \">\" + env.content + \"</\" + env.tag + \">\";\n  };\n\n  return _;\n}();\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nPrism.languages.markup = {\n  'comment': /<!--[\\s\\S]*?-->/,\n  'prolog': /<\\?[\\s\\S]+?\\?>/,\n  'doctype': /<!DOCTYPE[\\s\\S]+?>/i,\n  'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/i,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n        inside: {\n          'punctuation': [/^=/, {\n            pattern: /^(\\s*)[\"']|[\"']$/,\n            lookbehind: true\n          }]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': /&#?[\\da-z]{1,8};/i\n};\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] = Prism.languages.markup['entity']; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nPrism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: Prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: Prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, tagName), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    Prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var insideString = {\n    'environment': {\n      pattern: RegExp(\"\\\\$\" + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp(\"(\\\\{)\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)\\w+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b\\w+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+?)\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s*(?:\\r?\\n|\\r)(?:[\\s\\S])*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true\n    }, // “Normal” string\n    {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|`[^`]+`|(?!\\1)[^\\\\])*\\1/,\n      greedy: true,\n      inside: insideString\n    }],\n    'environment': {\n      pattern: RegExp(\"\\\\$?\" + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|==?|!=?|=~|<<[<-]?|[&\\d]?>>|\\d?[<>]&?|&[>&]?|\\|[&|]?|<=?|>=?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(Prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nPrism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'function': /\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nPrism.languages.c = Prism.languages.extend('clike', {\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+)\\w+/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/,\n  'number': /(?:\\b0x(?:[\\da-f]+\\.?[\\da-f]*|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]*/i\n});\nPrism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^\\s*)#\\s*[a-z]+(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    alias: 'property',\n    inside: {\n      // highlight the path of the include statement as a string\n      'string': {\n        pattern: /(#\\s*include\\s*)(?:<.+?>|(\"|')(?:\\\\?.)+?\\2)/,\n        lookbehind: true\n      },\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /(#\\s*)\\b(?:define|defined|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,\n        lookbehind: true,\n        alias: 'keyword'\n      }\n    }\n  },\n  // highlight predefined macros as constants\n  'constant': /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n});\ndelete Prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\nPrism.languages.cpp = Prism.languages.extend('c', {\n  'class-name': {\n    pattern: /(\\b(?:class|enum|struct)\\s+)\\w+/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,\n  'number': {\n    pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+\\.?[\\da-f']*|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+\\.?[\\d']*|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]*/i,\n    greedy: true\n  },\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n  'boolean': /\\b(?:true|false)\\b/\n});\nPrism.languages.insertBefore('cpp', 'string', {\n  'raw-string': {\n    pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n    alias: 'string',\n    greedy: true\n  }\n});\n/* \"prismjs/components/prism-css\" */\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /@[\\w-]+/ // See rest below\n\n      }\n    },\n    'url': {\n      pattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/\n      }\n    },\n    'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n    'important': /!important\\b/i,\n    'function': /[-a-z0-9]+(?=\\()/i,\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    Prism.languages.insertBefore('inside', 'attr-value', {\n      'style-attr': {\n        pattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n        inside: {\n          'attr-name': {\n            pattern: /^\\s*style/i,\n            inside: markup.tag.inside\n          },\n          'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n          'attr-value': {\n            pattern: /.+/i,\n            inside: Prism.languages.css\n          }\n        },\n        alias: 'language-css'\n      }\n    }, markup.tag);\n  }\n})(Prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\nPrism.languages.css.selector = {\n  pattern: Prism.languages.css.selector,\n  inside: {\n    'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n    'pseudo-class': /:[-\\w]+/,\n    'class': /\\.[-:.\\w]+/,\n    'id': /#[-:.\\w]+/,\n    'attribute': {\n      pattern: /\\[(?:[^[\\]\"']|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1)*\\]/,\n      greedy: true,\n      inside: {\n        'punctuation': /^\\[|\\]$/,\n        'case-sensitivity': {\n          pattern: /(\\s)[si]$/i,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'namespace': {\n          pattern: /^(\\s*)[-*\\w\\xA0-\\uFFFF]*\\|(?!=)/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\|$/\n          }\n        },\n        'attribute': {\n          pattern: /^(\\s*)[-\\w\\xA0-\\uFFFF]+/,\n          lookbehind: true\n        },\n        'value': [/(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/, {\n          pattern: /(=\\s*)[-\\w\\xA0-\\uFFFF]+(?=\\s*$)/,\n          lookbehind: true\n        }],\n        'operator': /[|~*^$]?=/\n      }\n    },\n    'n-th': [{\n      pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n      lookbehind: true,\n      inside: {\n        'number': /[\\dn]+/,\n        'operator': /[+-]/\n      }\n    }, {\n      pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n      lookbehind: true\n    }],\n    'punctuation': /[()]/\n  }\n};\nPrism.languages.insertBefore('css', 'property', {\n  'variable': {\n    pattern: /(^|[^-\\w\\xA0-\\uFFFF])--[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*/i,\n    lookbehind: true\n  }\n});\nPrism.languages.insertBefore('css', 'function', {\n  'operator': {\n    pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n    lookbehind: true\n  },\n  'hexcode': /#[\\da-f]{3,8}/i,\n  'entity': /\\\\[\\da-f]{1,8}/i,\n  'unit': {\n    pattern: /(\\d)(?:%|[a-z]+)/,\n    lookbehind: true\n  },\n  'number': /-?[\\d.]+/\n});\n/* \"prismjs/components/prism-javascript\" */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [Prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\nPrism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: Prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nPrism.languages.insertBefore('javascript', 'string', {\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\${|}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  }\n});\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}))*\\s*\\/?)?>/i;\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: /\\{\\.{3}[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\}/,\n      inside: {\n        'punctuation': /\\.{3}|[{}.]/,\n        'attr-value': /\\w+/\n      }\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'attr-value', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: /=(\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?={)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      },\n      'alias': 'language-javascript'\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function (token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function (tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ; else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(Prism);\n/* \"prismjs/components/prism-javadoclike\" */\n\n\n(function (Prism) {\n  var javaDocLike = Prism.languages.javadoclike = {\n    'parameter': {\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,\n      lookbehind: true\n    },\n    'keyword': {\n      // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n      // @word, {@word}\n      pattern: /(^\\s*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n      lookbehind: true\n    },\n    'punctuation': /[{}]/\n  };\n  /**\n   * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n   *\n   * @param {string} lang the language add doc comment support to.\n   * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n   */\n\n  function docCommentSupport(lang, callback) {\n    var tokenName = 'doc-comment';\n    var grammar = Prism.languages[lang];\n\n    if (!grammar) {\n      return;\n    }\n\n    var token = grammar[tokenName];\n\n    if (!token) {\n      // add doc comment: /** */\n      var definition = {};\n      definition[tokenName] = {\n        pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n        alias: 'comment'\n      };\n      grammar = Prism.languages.insertBefore(lang, 'comment', definition);\n      token = grammar[tokenName];\n    }\n\n    if (token instanceof RegExp) {\n      // convert regex to object\n      token = grammar[tokenName] = {\n        pattern: token\n      };\n    }\n\n    if (Array.isArray(token)) {\n      for (var i = 0, l = token.length; i < l; i++) {\n        if (token[i] instanceof RegExp) {\n          token[i] = {\n            pattern: token[i]\n          };\n        }\n\n        callback(token[i]);\n      }\n    } else {\n      callback(token);\n    }\n  }\n  /**\n   * Adds doc-comment support to the given languages for the given documentation language.\n   *\n   * @param {string[]|string} languages\n   * @param {Object} docLanguage\n   */\n\n\n  function addSupport(languages, docLanguage) {\n    if (typeof languages === 'string') {\n      languages = [languages];\n    }\n\n    languages.forEach(function (lang) {\n      docCommentSupport(lang, function (pattern) {\n        if (!pattern.inside) {\n          pattern.inside = {};\n        }\n\n        pattern.inside.rest = docLanguage;\n      });\n    });\n  }\n\n  Object.defineProperty(javaDocLike, 'addSupport', {\n    value: addSupport\n  });\n  javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike);\n})(Prism);\n/* \"prismjs/components/prism-java\" */\n\n\n(function (Prism) {\n  var keywords = /\\b(?:abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while|var|null|exports|module|open|opens|provides|requires|to|transitive|uses|with)\\b/; // based on the java naming conventions\n\n  var className = /\\b[A-Z](?:\\w*[a-z]\\w*)?\\b/;\n  Prism.languages.java = Prism.languages.extend('clike', {\n    'class-name': [className, // variables and parameters\n    // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n    /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=())])/],\n    'keyword': keywords,\n    'function': [Prism.languages.clike.function, {\n      pattern: /(\\:\\:)[a-z_]\\w*/,\n      lookbehind: true\n    }],\n    'number': /\\b0b[01][01_]*L?\\b|\\b0x[\\da-f_]*\\.?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*\\.?[\\d_]*|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n    'operator': {\n      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|([-+&|])\\2|[?:~]|[-+*/%&|^!=<>]=?)/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('java', 'class-name', {\n    'annotation': {\n      alias: 'punctuation',\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true\n    },\n    'namespace': {\n      pattern: /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)[a-z]\\w*(\\.[a-z]\\w*)+/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    },\n    'generics': {\n      pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n      inside: {\n        'class-name': className,\n        'keyword': keywords,\n        'punctuation': /[<>(),.:]/,\n        'operator': /[?&|]/\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-markup-templating\" */\n\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function (env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function (env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-php\" */\n\n/**\n * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n * Modified by Miles Johnson: http://milesj.me\n *\n * Supports the following:\n * \t\t- Extends clike syntax\n * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)\n * \t\t- Smarter constant and function matching\n *\n * Adds the following new token classes:\n * \t\tconstant, delimiter, variable, function, package\n */\n\n\n(function (Prism) {\n  Prism.languages.php = Prism.languages.extend('clike', {\n    'keyword': /\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|class|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|eval|exit|extends|final|finally|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|new|or|parent|print|private|protected|public|require|require_once|return|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n    'boolean': {\n      pattern: /\\b(?:false|true)\\b/i,\n      alias: 'constant'\n    },\n    'constant': [/\\b[A-Z_][A-Z0-9_]*\\b/, /\\b(?:null)\\b/i],\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('php', 'string', {\n    'shell-comment': {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      alias: 'comment'\n    }\n  });\n  Prism.languages.insertBefore('php', 'comment', {\n    'delimiter': {\n      pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n      alias: 'important'\n    }\n  });\n  Prism.languages.insertBefore('php', 'keyword', {\n    'variable': /\\$+(?:\\w+\\b|(?={))/i,\n    'package': {\n      pattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\\\/\n      }\n    }\n  }); // Must be defined after the function pattern\n\n  Prism.languages.insertBefore('php', 'operator', {\n    'property': {\n      pattern: /(->)[\\w]+/,\n      lookbehind: true\n    }\n  });\n  var string_interpolation = {\n    pattern: /{\\$(?:{(?:{[^{}]+}|[^{}]+)}|[^{}])+}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[.+?]|->\\w+)*)/,\n    lookbehind: true,\n    inside: {\n      rest: Prism.languages.php\n    }\n  };\n  Prism.languages.insertBefore('php', 'string', {\n    'nowdoc-string': {\n      pattern: /<<<'([^']+)'(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<'?|[';]$/\n          }\n        }\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<(?:\"([^\"]+)\"(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\1;|([a-z_]\\w*)(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?\\2;)/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'delimiter': {\n          pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n          alias: 'symbol',\n          inside: {\n            'punctuation': /^<<<\"?|[\";]$/\n          }\n        },\n        'interpolation': string_interpolation // See below\n\n      }\n    },\n    'single-quoted-string': {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true,\n      alias: 'string'\n    },\n    'double-quoted-string': {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'interpolation': string_interpolation // See below\n\n      }\n    }\n  }); // The different types of PHP strings \"replace\" the C-like standard string\n\n  delete Prism.languages.php['string'];\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (!/<\\?/.test(env.code)) {\n      return;\n    }\n\n    var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#)(?:[^?\\n\\r]|\\?(?!>))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$))*?(?:\\?>|$)/ig;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'php', phpPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php');\n  });\n})(Prism);\n/* \"prismjs/components/prism-jsdoc\" */\n\n\n(function (Prism) {\n  var javascript = Prism.languages.javascript;\n  var type = /{(?:[^{}]|{(?:[^{}]|{[^{}]*})*})+}/.source;\n  var parameterPrefix = '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)';\n  Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n    'parameter': {\n      // @param {string} foo - foo bar\n      pattern: RegExp(parameterPrefix + /[$\\w\\xA0-\\uFFFF.]+(?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }\n  });\n  Prism.languages.insertBefore('jsdoc', 'keyword', {\n    'optional-parameter': {\n      // @param {string} [baz.foo=\"bar\"] foo bar\n      pattern: RegExp(parameterPrefix + /\\[[$\\w\\xA0-\\uFFFF.]+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n      lookbehind: true,\n      inside: {\n        'parameter': {\n          pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\./\n          }\n        },\n        'code': {\n          pattern: /(=)[\\s\\S]*(?=\\]$)/,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        },\n        'punctuation': /[=[\\]]/\n      }\n    },\n    'class-name': [{\n      pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n      lookbehind: true,\n      inside: {\n        'punctuation': /[.,:?=<>|{}()[\\]]/\n      }\n    }, {\n      pattern: /(@(?:augments|extends|class|interface|memberof!?|this)\\s+)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }],\n    'example': {\n      pattern: /(@example\\s+)[^@]+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n      lookbehind: true,\n      inside: {\n        'code': {\n          pattern: /^(\\s*(?:\\*\\s*)?).+$/m,\n          lookbehind: true,\n          inside: javascript,\n          alias: 'language-javascript'\n        }\n      }\n    }\n  });\n  Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc);\n})(Prism);\n/* \"prismjs/components/prism-actionscript\" */\n\n\nPrism.languages.actionscript = Prism.languages.extend('javascript', {\n  'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,\n  'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n});\nPrism.languages.actionscript['class-name'].alias = 'function';\n\nif (Prism.languages.markup) {\n  Prism.languages.insertBefore('actionscript', 'string', {\n    'xml': {\n      pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n      lookbehind: true,\n      inside: {\n        rest: Prism.languages.markup\n      }\n    }\n  });\n}\n/* \"prismjs/components/prism-coffeescript\" */\n\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/,\n      interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.javascript\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(Prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: /(\\.\\s*)#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*/,\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(Prism);\n/* \"prismjs/components/prism-flow\" */\n\n\n(function (Prism) {\n  Prism.languages.flow = Prism.languages.extend('javascript', {});\n  Prism.languages.insertBefore('flow', 'keyword', {\n    'type': [{\n      pattern: /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n      alias: 'tag'\n    }]\n  });\n  Prism.languages.flow['function-variable'].pattern = /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i;\n  delete Prism.languages.flow['parameter'];\n  Prism.languages.insertBefore('flow', 'operator', {\n    'flow-punctuation': {\n      pattern: /\\{\\||\\|\\}/,\n      alias: 'punctuation'\n    }\n  });\n\n  if (!Array.isArray(Prism.languages.flow.keyword)) {\n    Prism.languages.flow.keyword = [Prism.languages.flow.keyword];\n  }\n\n  Prism.languages.flow.keyword.unshift({\n    pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n    lookbehind: true\n  });\n})(Prism);\n/* \"prismjs/components/prism-n4js\" */\n\n\nPrism.languages.n4js = Prism.languages.extend('javascript', {\n  // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n  'keyword': /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n});\nPrism.languages.insertBefore('n4js', 'constant', {\n  // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n  'annotation': {\n    pattern: /@+\\w+/,\n    alias: 'operator'\n  }\n});\nPrism.languages.n4jsd = Prism.languages.n4js;\n/* \"prismjs/components/prism-typescript\" */\n\nPrism.languages.typescript = Prism.languages.extend('javascript', {\n  // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n  'keyword': /\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,\n  'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n});\nPrism.languages.ts = Prism.languages.typescript;\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:md|markdown)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {}\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(Prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nPrism.languages.graphql = {\n  'comment': /#.*/,\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:true|false)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:enum|fragment|implements|input|interface|mutation|on|query|scalar|schema|type|union)\\b/,\n  'operator': /[!=|]|\\.{3}/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'constant': /\\b(?!ID\\b)[A-Z][A-Z_\\d]*\\b/\n};\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\r?\\n|\\r)(?!\\r?\\n|\\r))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @param {boolean} starAlternative Whether to also add an alternative where all `_`s are replaced with `*`s.\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern, starAlternative) {\n    pattern = pattern.replace(/<inner>/g, inner);\n\n    if (starAlternative) {\n      pattern = pattern + '|' + pattern.replace(/_/g, '\\\\*');\n    }\n\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``.+?``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\r?\\n|\\r)|$)/.source.replace(/__/g, tableCell);\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\r?\\n|\\r)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /(^[ \\t]*(?:\\r?\\n|\\r))(?: {4}|\\t).+(?:(?:\\r?\\n|\\r)(?: {4}|\\t).+)*/m,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // `code`\n      // ``code``\n      pattern: /``.+?``|`[^`\\r\\n]+`/,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\r?\\n|\\r))[\\s\\S]+?(?=(?:\\r?\\n|\\r)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\r?\\n|\\r)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#+.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__/.source, true),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_/.source, true),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+?\\2/.source, false),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[(?:(?!\\])<inner>)+\\])/.source, false),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'variable': {\n          pattern: /(\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'content': {\n          pattern: /(^!?\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'string': {\n          pattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          var alias = 'language-' + codeLang.content.trim().split(/\\s+/)[0].toLowerCase(); // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      // reverse Prism.util.encode\n      var code = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');\n      env.content = Prism.highlight(code, grammar, codeLang);\n    }\n  });\n  Prism.languages.md = Prism.languages.markdown;\n})(Prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d+.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === \"diff\") {\n      alias.push(\"bold\");\n    }\n\n    Prism.languages.diff[name] = {\n      // pattern: /^(?:[_].*(?:\\r\\n?|\\n|(?![\\s\\S])))+/m\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(Prism);\n/* \"prismjs/components/prism-git\" */\n\n\nPrism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/m\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit_sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nPrism.languages.go = Prism.languages.extend('clike', {\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'builtin': /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/,\n  'boolean': /\\b(?:_|iota|nil|true|false)\\b/,\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'number': /(?:\\b0x[a-f\\d]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n  'string': {\n    pattern: /([\"'`])(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    greedy: true\n  }\n});\ndelete Prism.languages.go['class-name'];\n/* \"prismjs/components/prism-handlebars\" */\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'block': {\n      pattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n})(Prism);\n/* \"prismjs/components/prism-json\" */\n\n\nPrism.languages.json = {\n  'property': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    greedy: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    greedy: true\n  },\n  'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n  'number': /-?\\d+\\.?\\d*(e[+-]?\\d+)?/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nPrism.languages.less = Prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n  'operator': /[+\\-*\\/]/\n});\nPrism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      \"punctuation\": /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nPrism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  // Built-in target names\n  'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n  // Targets\n  'symbol': {\n    pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n    inside: {\n      'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  'keyword': [// Directives\n  /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n  {\n    pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n    lookbehind: true\n  }],\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nPrism.languages.objectivec = Prism.languages.extend('c', {\n  'keyword': /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'string': /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete Prism.languages.objectivec['class-name'];\n/* \"prismjs/components/prism-ocaml\" */\n\nPrism.languages.ocaml = {\n  'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n  'string': [{\n    pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n    greedy: true\n  }],\n  'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n  'type': {\n    pattern: /\\B['`]\\w*/,\n    alias: 'variable'\n  },\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  // Custom operators are allowed\n  'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,\n  'punctuation': /[(){}\\[\\]|_.,:;]/\n};\n/* \"prismjs/components/prism-python\" */\n\nPrism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:{{)*){(?!{)(?:[^{}]|{(?!{)(?:[^{}]|{(?!{)(?:[^{}])+})+})+}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]+?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^\\s*)@\\w+(?:\\.\\w+)*/i,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:True|False|None)\\b/,\n  'number': /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n  'operator': /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nPrism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = Prism.languages.python;\nPrism.languages.py = Prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nPrism.languages.reason = Prism.languages.extend('clike', {\n  'comment': {\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n});\nPrism.languages.insertBefore('reason', 'class-name', {\n  'character': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    alias: 'string'\n  },\n  'constructor': {\n    // Negative look-ahead prevents from matching things like String.capitalize\n    pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    alias: 'variable'\n  },\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete Prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,\n      lookbehind: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/m\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/, {\n    pattern: /(\\s+)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,\n      lookbehind: true\n    }\n  });\n})(Prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nPrism.languages.scss = Prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nPrism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n    pattern: /( +)(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nPrism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nPrism.languages.insertBefore('scss', 'function', {\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:true|false)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n    lookbehind: true\n  }\n});\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n/* \"prismjs/components/prism-sql\" */\n\nPrism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+\\.?\\d*|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var inside = {\n    'url': /url\\(([\"']?).*?\\1\\)/i,\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'number': /\\b\\d+(?:\\.\\d+)?%?/,\n    'boolean': /\\b(?:true|false)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^{|}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'comment': {\n      pattern: /(^|[^\\\\])(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'atrule-declaration': {\n      pattern: /(^\\s*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,\n      lookbehind: true,\n      inside: {\n        keyword: /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(Prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\nvar typescript = Prism.util.clone(Prism.languages.typescript);\nPrism.languages.tsx = Prism.languages.extend('jsx', typescript);\n/* \"prismjs/components/prism-wasm\" */\n\nPrism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^_`|~]+/i,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n/* \"prismjs/components/prism-yaml\" */\n\nPrism.languages.yaml = {\n  'scalar': {\n    pattern: /([\\-:]\\s*(?:![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\2[^\\r\\n]+)*)/,\n    lookbehind: true,\n    alias: 'string'\n  },\n  'comment': /#.*/,\n  'key': {\n    pattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\n    lookbehind: true,\n    alias: 'atrule'\n  },\n  'directive': {\n    pattern: /(^[ \\t]*)%.+/m,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'datetime': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?)(?=[ \\t]*(?:$|,|]|}))/m,\n    lookbehind: true,\n    alias: 'number'\n  },\n  'boolean': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:true|false)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'null': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(?:null|~)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true,\n    alias: 'important'\n  },\n  'string': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)(\"|')(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2(?=[ \\t]*(?:$|,|]|}|\\s*#))/m,\n    lookbehind: true,\n    greedy: true\n  },\n  'number': {\n    pattern: /([:\\-,[{]\\s*(?:![^\\s]+)?[ \\t]*)[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+\\.?\\d*|\\.?\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\n    lookbehind: true\n  },\n  'tag': /![^\\s]+/,\n  'important': /[&*][\\w]+/,\n  'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n};\nPrism.languages.yml = Prism.languages.yaml;\n\nexport default Prism;\n","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"at-rule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\n\nexport default theme;\n","import { h } from 'preact'\n\nimport style from './style.scss'\n\nconst Button = ({ children, ...props }) => {\n  return (\n    <button className={style.button} {...props}>\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","export const darkTheme = {\n  styles: [\n    {\n      types: ['comment'],\n      style: {\n        color: 'rgb(92, 99, 112)',\n        fontStyle: 'italic',\n      },\n    },\n    {\n      types: ['keyword', 'selector', 'changed'],\n      style: {\n        color: 'rgb(198, 120, 221)',\n      },\n    },\n    {\n      types: ['operator'],\n      style: {\n        color: 'rgb(171, 178, 191)',\n      },\n    },\n    {\n      types: ['constant', 'number', 'builtin', 'attr-name'],\n      style: {\n        color: 'rgb(209, 154, 102)',\n      },\n    },\n    {\n      types: ['char', 'symbol'],\n      style: {\n        color: 'rgb(86, 182, 194)',\n      },\n    },\n    {\n      types: ['variable', 'tag', 'deleted'],\n      style: {\n        color: 'rgb(224, 108, 117)',\n      },\n    },\n    {\n      types: ['string', 'inserted'],\n      style: {\n        color: 'rgb(152, 195, 121)',\n      },\n    },\n    {\n      types: ['punctuation'],\n      style: {\n        color: 'rgb(92, 99, 112)',\n      },\n    },\n    {\n      types: ['function'],\n      style: {\n        color: 'rgb(97, 175, 239)',\n      },\n    },\n    {\n      types: ['class-name'],\n      style: {\n        color: 'rgb(229, 192, 123)',\n      },\n    },\n  ],\n}\n\nexport const lightTheme = {\n  styles: [\n    {\n      types: ['comment'],\n      style: {\n        color: 'rgb(160, 161, 167)',\n        fontStyle: 'italic',\n      },\n    },\n    {\n      types: ['keyword', 'selector', 'changed'],\n      style: {\n        color: 'rgb(166, 38, 164)',\n      },\n    },\n    {\n      types: ['operator'],\n      style: {\n        color: 'rgb(56, 58, 66)',\n      },\n    },\n    {\n      types: ['constant', 'number', 'builtin', 'attr-name'],\n      style: {\n        color: 'rgb(152, 104, 1)',\n      },\n    },\n    {\n      types: ['char', 'symbol'],\n      style: {\n        color: 'rgb(1, 132, 188)',\n      },\n    },\n    {\n      types: ['variable', 'tag', 'deleted'],\n      style: {\n        color: 'rgb(228, 86, 73)',\n      },\n    },\n    {\n      types: ['string', 'inserted'],\n      style: {\n        color: 'rgb(80, 161, 79)',\n      },\n    },\n    {\n      types: ['punctuation'],\n      style: {\n        color: 'rgb(160, 161, 167)',\n      },\n    },\n    {\n      types: ['function'],\n      style: {\n        color: 'rgb(64, 120, 242)',\n      },\n    },\n    {\n      types: ['class-name'],\n      style: {\n        color: 'rgb(193, 132, 1)',\n      },\n    },\n  ],\n}\n","import { h } from 'preact'\nimport { useState } from 'preact/hooks'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport copy from 'copy-text-to-clipboard'\n\nimport globalStyle from './style.scss'\nimport Button from '../button'\nimport { lightTheme } from './themes'\nimport { normalize } from '../../utils/normalize'\n\nconst renderTokens = (tokens, getLineProps, getTokenProps) => {\n  const linesTokened = []\n  const linesNumbered = []\n\n  tokens.forEach((line, i) => {\n    linesTokened.push(\n      <div {...getLineProps({ line, key: i })}>\n        {line.map((token, key) => (\n          /* eslint-disable-next-line react/jsx-key */\n          <span {...getTokenProps({ token, key })} />\n        ))}\n      </div>\n    )\n\n    linesNumbered.push(<div key={i}>{i + 1}</div>)\n  })\n\n  return { linesTokened, linesNumbered }\n}\n\nconst Code = ({ children, language }) => {\n  const [copyState, setCopyState] = useState('Copy')\n  const copyCode = () => {\n    copy(children)\n    setCopyState('Copied!')\n    setTimeout(() => {\n      setCopyState('Copy')\n    }, 1200)\n  }\n\n  const highlightProps = {\n    ...defaultProps,\n    ...{\n      theme: lightTheme,\n    },\n  }\n\n  const htmlString = normalize(children)\n\n  return (\n    <Highlight {...highlightProps} code={htmlString} language={language}>\n      {({ tokens, getLineProps, getTokenProps }) => {\n        const { linesTokened, linesNumbered } = renderTokens(\n          tokens,\n          getLineProps,\n          getTokenProps\n        )\n\n        return (\n          <pre className={globalStyle.highlight}>\n            <div className={globalStyle.numbers}>{linesNumbered}</div>\n            <code>{linesTokened}</code>\n            <div className={globalStyle.actions}>\n              <Button onClick={copyCode} onKeyPress={copyCode}>\n                {copyState}\n              </Button>\n              <div>{language.toUpperCase()}</div>\n            </div>\n          </pre>\n        )\n      }}\n    </Highlight>\n  )\n}\n\nexport default Code\n","/**\n * Normalize a long string.\n *\n * @param {string} input the text to normalize\n * @param {object|null} options options\n *\n * @option options\n * @param {boolean} removeTrailing = true,\n * @param {boolean} leftTrim = true,\n * @param {boolean} rightTrim = true,\n * @param {boolean} removeInitialLineFeed = true,\n * @param {boolean} tabsToSpaces = true,\n * @param {number} indent = 2,\n *\n * @returns {string} normalized string\n */\nexport function normalize(\n  input,\n  { removeTrailing, leftTrim, rightTrim, removeInitialLineFeed, tabsToSpaces, indent } = {\n    removeTrailing: true,\n    leftTrim: true,\n    rightTrim: true,\n    removeInitialLineFeed: true,\n    tabsToSpaces: true,\n    indent: 2,\n  }\n) {\n  let output = input\n\n  if (removeTrailing) {\n    output = output.replace(/\\s*?$/gm, '')\n  }\n\n  if (leftTrim) {\n    output = output.replace(/^\\s+/, '')\n  }\n\n  if (rightTrim) {\n    output = output.replace(/\\s+$/, '')\n  }\n\n  if (removeInitialLineFeed) {\n    output = output.replace(/^(?:\\r?\\n|\\r)/, '')\n  }\n\n  if (tabsToSpaces) {\n    output = output.replace(/\\t/g, new Array(++indent).join(' '))\n  }\n\n  return output\n}\n","import { h } from 'preact'\n\nimport style from './style.scss'\nimport Code from '../../components/code'\n\nimport HTMLExample from './examples/html'\nimport JavaScriptExample from './examples/javascript'\n\nconst Home = () => {\n  return (\n    <div className={style.page}>\n      <h3>Install</h3>\n      <Code language=\"shell\">{`\nnpm install gdpr-cookie-consent-banner\n    `}</Code>\n\n      <h3>HTML</h3>\n      <Code language=\"html\">{HTMLExample}</Code>\n\n      <h3>JavaScript</h3>\n      <Code language=\"js\">{JavaScriptExample}</Code>\n    </div>\n  )\n}\n\nexport default Home\n","export default `\n<html lang=\"en\">\n  <head>\n    <link rel=\"stylesheet\" href=\"./path/to/cookie-consent.umd.css\" />\n    <script defer src=\"./path/to/cookie-consent.umd.js\"></script>\n  </head>\n  <body>\n    <div\n      id=\"cookiebanner\"\n      className=\"cookiebanner\"\n      aria-label=\"Edit your cookie settings\"\n      role=\"banner\"\n    >\n      <div className=\"info\">\n        <div className=\"title\">Your Cookie Controls</div>\n        <div className=\"description\">\n          Paste some info for your users here. For example a\n          <a href=\"#0\">link to your privacy policy</a> or something similiar.\n        </div>\n      </div>\n      <div className=\"choices\">\n        <label className=\"choice\" htmlFor=\"choice-functional2\">\n          <input\n            type=\"checkbox\"\n            name=\"choice:functional\"\n            id=\"choice-functional2\"\n            checked\n          />\n          <div className=\"name\">Functional</div>\n          <p className=\"info\">\n            Rejecting will let this banner re-appear on every reload.\n          </p>\n        </label>\n        <label className=\"choice\" htmlFor=\"choice-testest\">\n          <input type=\"checkbox\" name=\"choice:testest\" id=\"choice-testest\" />\n          <div className=\"name\">Test</div>\n          <p className=\"info\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit.\n          </p>\n        </label>\n      </div>\n      <div className=\"buttons\">\n        <button className=\"reject\">Reject choices</button>\n        <button className=\"accept\">Accept choices</button>\n      </div>\n    </div>\n    <div\n      id=\"cookienotice\"\n      className=\"cookienotice\"\n      aria-label=\"Show the cookie settings again\"\n      role=\"button\"\n    >\n      <img src=\"/assets/cookie.svg\" alt=\"A shield which represents privacy\" />\n    </div>\n  </body>\n</html>\n`\n","export default `\n  window.consent = new CookieConsent()\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"highlight\":\"highlight__36m-b\",\"numbers\":\"numbers__12a04\",\"actions\":\"actions__2CA2v\"};"],"sourceRoot":""}