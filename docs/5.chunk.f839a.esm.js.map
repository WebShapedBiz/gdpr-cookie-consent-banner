{"version":3,"sources":["webpack:///../lib/accessibility.js","webpack:///../lib/cookie.js","webpack:///../lib/consent.js","webpack:///../lib/index.js","webpack:///./components/consent/index.js"],"names":["prefersReducedMotion","window","matchMedia","matches","createCookieString","withOptions","Object","keys","map","key","join","getCookie","withName","value","document","cookie","split","pop","shift","includes","JSON","parse","getAllCookies","str","setCookie","andValue","andOptions","options","stringify","cookieDefaults","removeCookie","path","expires","Date","clearCookies","thatMatch","allCookies","regex","RegExp","forEach","match","findCookie","find","test","getExpirationDate","expiringDays","expireDate","setTime","getTime","Event","ON_UPDATE","ON_VALUE_CHANGED","ON_ACCEPT","ON_REJECT","CookieConsent","constructor","defaultOptions","debug","name","banner","getElementById","notice","linkOnly","onRejectEnd","location","reload","onAcceptEnd","consent","choices","getChoices","saveUserOptions","capabilities","checked","onReject","removeUserOptions","onAccept","consented","this","queue","button","reject","querySelector","accept","initEvents","content","loadUserOptions","setChoices","initStartUpEvents","initFields","showNotice","showBanner","console","error","addEventListener","time","choice","capability","getCapability","_runValueEventsFor","_runEventFor","_startRunner","Function","timeEnd","hideBanner","setTimeout","hideNotice","saveThis","newContent","getChoice","byName","querySelectorAll","node","getAttribute","replace","push","c","showElement","element","animate","opacity","duration","iterations","classList","add","hideElement","remove","_addToQueue","func","values","event","filter","q","withEvent","params","info","warn","withChoice","userOptions","cookieService","CookieService","Banner","id","className","aria-label","role","href","htmlFor","type","Notice","src","alt","Consent","useEffect","log","onUpdate","_","onValueChange"],"mappings":"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","file":"5.chunk.f839a.esm.js","sourcesContent":["/**\n * The browser user prefers to have reduced motion.\n */\nexport function prefersReducedMotion() {\n  return window.matchMedia('(prefers-reduced-motion)').matches\n}\n","const cookieDefaults = {\n  expires: getExpirationDate(),\n  path: '/',\n}\n\nfunction createCookieString(withOptions) {\n  return Object.keys(withOptions)\n    .map((key) => `${key}=${withOptions[key]}`)\n    .join('; ')\n}\n\nexport function getCookie(withName) {\n  const value = ('; ' + document.cookie)\n    .split(`; ${withName}=`)\n    .pop()\n    .split(';')\n    .shift()\n  if (!value || value === 'undefined') {\n    return undefined\n  } else if (['true', 'false'].includes(value)) {\n    return value === 'true'\n  }\n  return JSON.parse(value)\n}\n\nexport function getAllCookies() {\n  const strings = document.cookie.split('; ')\n  const cookies = strings.map((str) => {\n    const [key, value] = str.split('=')\n    return { key, value }\n  })\n  return cookies\n}\n\nexport function setCookie(withName, andValue, andOptions) {\n  let options = {}\n  options[withName] = JSON.stringify(andValue)\n  options = { ...options, ...cookieDefaults, ...andOptions }\n  options = createCookieString(options)\n  document.cookie = options\n}\n\nexport function removeCookie(withName, andOptions) {\n  let options = {}\n  options[withName] = ''\n  options['max-age'] = 0\n  options.path = cookieDefaults.path\n  options = { ...options, ...andOptions }\n  options.expires = new Date('1996-06-13')\n  options = createCookieString(options)\n  setCookie(withName, options)\n}\n\nexport function clearCookies(thatMatch, withOptions) {\n  const allCookies = getAllCookies()\n  const regex = new RegExp(`^${thatMatch}`, 'g')\n  allCookies.forEach(({ key }) => {\n    if (key.match(regex)) {\n      removeCookie(key, withOptions)\n    }\n  })\n}\n\nexport function findCookie(thatMatch) {\n  const allCookies = getAllCookies()\n  const regex = new RegExp(`^${thatMatch}`, 'g')\n  const cookie = allCookies.find(({ key }) => regex.test(key))\n  return cookie || null\n}\n\nexport function getExpirationDate(expiringDays = 365) {\n  const expireDate = new Date()\n  expireDate.setTime(expireDate.getTime() + expiringDays * 24 * 60 * 60 * 1000)\n  return expireDate\n}\n","import { prefersReducedMotion } from './accessibility'\nimport { getCookie, setCookie, removeCookie } from './cookie'\n\nconst Event = {\n  // order is important here\n  ON_UPDATE: 'onUpdate',\n  ON_VALUE_CHANGED: 'onValueChange',\n  ON_ACCEPT: 'onAccept',\n  ON_REJECT: 'onReject',\n}\n\nexport default class CookieConsent {\n  constructor(options) {\n    const defaultOptions = {\n      debug: false,\n      name: 'cookie-consent',\n      banner: document.getElementById('cookiebanner'),\n      notice: document.getElementById('cookienotice'),\n      linkOnly: false,\n      onRejectEnd: () => {\n        window.location.reload()\n      },\n      onAcceptEnd: (consent) => {\n        const choices = consent.getChoices()\n        consent.saveUserOptions({ choices })\n      },\n      capabilities: [\n        {\n          name: 'functional',\n          checked: true,\n          onReject: (consent) => {\n            consent.removeUserOptions()\n          },\n          onAccept: (consent) => {\n            consent.saveUserOptions({ consented: true })\n          },\n        },\n      ],\n    }\n\n    this.options = { ...defaultOptions, ...options }\n    this.queue = [] // this will hold event hooks to run in order\n\n    if (!this.options.banner || !this.options.notice) {\n      console.error('Can not find required elements!')\n      return // no banner or notice present\n    }\n\n    this.button = {}\n    this.button.reject = this.options.banner.querySelector('.reject')\n    this.button.accept = this.options.banner.querySelector('.accept')\n\n    if (!this.button.reject || !this.button.accept) {\n      console.error('Can not find required buttons!')\n      return undefined // no buttons present\n    }\n\n    this.initEvents()\n\n    const content = this.loadUserOptions()\n\n    // console.log(JSON.stringify(content, null, 2))\n\n    if (content && content.choices) {\n      this.setChoices(content.choices)\n      this.initStartUpEvents()\n    } else {\n      this.initFields()\n    }\n\n    if (content && content.consented) {\n      this.showNotice()\n    } else {\n      this.showBanner()\n    }\n  }\n\n  /**\n   * Sync form input fields with capabilities .\n   *\n   * @returns {Choice[]} passed choices\n   */\n  initFields() {\n    const choices = this.options.capabilities.map(({ name, checked }) => ({\n      name: name,\n      value: checked,\n    }))\n    this.setChoices(choices)\n    return choices\n  }\n\n  /**\n   * Initial all element events.\n   */\n  initEvents() {\n    // Reject\n    this.button.reject.addEventListener('click', () => {\n      if (this.options.debug) console.time('reject')\n      const choices = this.initFields()\n      choices.forEach((choice) => {\n        const capability = this.getCapability(choice.name)\n        this._runValueEventsFor(capability, choice)\n        this._runEventFor(capability, Event.ON_REJECT)\n      })\n      this._startRunner()\n      this.setChoices(choices)\n      this.saveUserOptions({ choices })\n      if (this.options.onRejectEnd instanceof Function) {\n        this.options.onRejectEnd(this)\n      }\n      if (this.options.debug) console.timeEnd('reject')\n      this.hideBanner()\n      setTimeout(() => {\n        this.showNotice()\n      }, 160)\n    })\n\n    // Accept\n    this.button.accept.addEventListener('click', () => {\n      if (this.options.debug) console.time('accept')\n      const choices = this.getChoices()\n      choices.forEach((choice) => {\n        const capability = this.getCapability(choice.name)\n        this._runValueEventsFor(capability, choice)\n        this._runEventFor(capability, Event.ON_ACCEPT)\n      })\n      this._startRunner()\n      if (this.options.onAcceptEnd instanceof Function) {\n        this.options.onAcceptEnd(this)\n      }\n      if (this.options.debug) console.timeEnd('accept')\n      this.hideBanner()\n      setTimeout(() => {\n        this.showNotice()\n      }, 160)\n    })\n\n    // Show banner\n    this.options.notice.addEventListener('click', () => {\n      this.hideNotice()\n      this.showBanner()\n    })\n  }\n\n  /**\n   * On first load fire these events.\n   */\n  initStartUpEvents() {\n    const choices = this.getChoices()\n    choices.forEach((choice) => {\n      const capability = this.getCapability(choice.name)\n      if (choice.value) {\n        // is checked\n        this._runEventFor(capability, Event.ON_ACCEPT)\n      } else {\n        this._runEventFor(capability, Event.ON_REJECT)\n      }\n      this._startRunner()\n    })\n  }\n\n  /**\n   * Get our plugin options cookies content.\n   */\n  loadUserOptions() {\n    const content = getCookie(this.options.name)\n    if (!content) return null\n    return content\n  }\n\n  /**\n   * Save something to our plugin options cookie.\n   *\n   * @param {object} saveThis\n   */\n  saveUserOptions(saveThis) {\n    const oldContent = getCookie(this.options.name)\n    const newContent = { ...oldContent, ...saveThis }\n    setCookie(this.options.name, newContent)\n  }\n\n  /**\n   * Delete all plugin options that are saved into a cookie.\n   */\n  removeUserOptions() {\n    if (getCookie(this.options.name)) {\n      removeCookie(this.options.name)\n    }\n  }\n\n  /**\n   * Get single form input choice by its input name.\n   *\n   * @param {string} byName\n   */\n  getChoice(byName) {\n    const node = this.options.banner.querySelector(`.choice [name=\"choice:${byName}\"]`)\n\n    return node.checked\n  }\n\n  /**\n   * Get form input choices.\n   */\n  getChoices() {\n    let choices = []\n\n    this.options.banner.querySelectorAll('.choice input').forEach((node) => {\n      const name = node.getAttribute('name').replace('choice:', '')\n      const value = node.checked\n      choices.push({ name, value })\n    })\n\n    return choices\n  }\n\n  /**\n   * Set form input choices. Most likely for reseting the form.\n   *\n   * @param {Choice[]} choices\n   */\n  setChoices(choices) {\n    this.options.banner.querySelectorAll('.choice input').forEach((node) => {\n      const name = node.getAttribute('name').replace('choice:', '')\n      const choice = choices.find((c) => c.name === name)\n      if (choice) {\n        node.checked = choice.value\n      }\n    })\n  }\n\n  /**\n   * Get capability by name.\n   *\n   * @param {string} name\n   */\n  getCapability(name) {\n    return this.options.capabilities.find((c) => c.name === name)\n  }\n\n  /**\n   * Smoothly show an element.\n   *\n   * @param {HTMLElement} element\n   */\n  showElement(element) {\n    if ('animate' in element && !prefersReducedMotion()) {\n      element\n        .animate([{ opacity: 0 }, { opacity: 1 }], {\n          duration: 320,\n          iterations: 1,\n        })\n        .addEventListener('finish', function onFinish() {\n          element.classList.add('visible')\n        })\n    } else {\n      element.classList.add('visible')\n    }\n  }\n\n  /**\n   * Smoothly hide an element.\n   *\n   * @param {HTMLElement} element\n   */\n  hideElement(element) {\n    if ('animate' in element && !prefersReducedMotion()) {\n      element\n        .animate([{ opacity: 1 }, { opacity: 0 }], {\n          duration: 160,\n          iterations: 1,\n        })\n        .addEventListener('finish', function onFinish() {\n          element.classList.remove('visible')\n        })\n    } else {\n      element.classList.remove('visible')\n    }\n  }\n\n  /**\n   * Hide/Show the banner.\n   */\n  hideBanner() {\n    this.hideElement(this.options.banner)\n  }\n  showBanner() {\n    this.showElement(this.options.banner)\n  }\n\n  /**\n   * Hide/Show the notice.\n   */\n  hideNotice() {\n    if (!this.options.linkOnly) {\n      this.hideElement(this.options.notice)\n    }\n  }\n  showNotice() {\n    if (!this.options.linkOnly) {\n      this.showElement(this.options.notice)\n    }\n  }\n\n  /**\n   * Add a callable event function to an queue.\n   *\n   * @param {string} name\n   * @param {function} func\n   */\n  _addToQueue(name, func) {\n    this.queue.push({ name, func })\n  }\n\n  /**\n   * Run the callable event queue.\n   */\n  _startRunner() {\n    // loop event by order\n    Object.values(Event).forEach((event) => {\n      // find callables from queue with event name\n      const callables = this.queue.filter((q) => q.name === event)\n      // call them\n      callables.forEach(({ func }) => func())\n    })\n    this.queue = [] // clear queue for new operations\n  }\n\n  /**\n   * Run one event for one capability.\n   *\n   * @param {Capability} capability\n   * @param {Event} withEvent\n   * @param {object} params\n   */\n  _runEventFor(capability, withEvent, params = {}) {\n    if (\n      capability &&\n      withEvent &&\n      capability[withEvent] &&\n      capability[withEvent] instanceof Function\n    ) {\n      this._addToQueue(withEvent, () => capability[withEvent](this, params))\n      if (this.options.debug) {\n        console.info(`[CookieConsent]: Added ${capability.name}.${withEvent} to queue`)\n      }\n    } else {\n      if (this.options.debug) {\n        console.warn(\n          `[CookieConsent]: Capability ${capability.name} has no event of name ${withEvent}`\n        )\n      }\n    }\n  }\n\n  /**\n   * Run common or value change/update events for one capability.\n   *\n   * @param {Capability} capability\n   * @param {Choice} withChoice\n   */\n  _runValueEventsFor(capability, withChoice) {\n    let params = {\n      choice: withChoice.value,\n    }\n\n    // on input value update\n    this._runEventFor(capability, Event.ON_UPDATE, params)\n\n    // on input value change\n    const userOptions = this.loadUserOptions()\n    // load saved cookie options choices if present\n    if (userOptions?.choices) {\n      // find current choice in saved choices\n      const choice = userOptions.choices.find((c) => c.name === withChoice.name)\n      // check against input choice value\n      const hasChanged = withChoice.value !== choice.value\n      if (hasChanged) {\n        this._runEventFor(capability, Event.ON_VALUE_CHANGED, params)\n      }\n    }\n  }\n}\n","import CookieConsent from './consent'\nimport * as CookieService from './cookie'\n\nimport '../style.scss'\n\nCookieConsent.cookieService = CookieService\n\nexport default CookieConsent\n","import { h } from 'preact'\nimport { useEffect } from 'preact/hooks'\n\nimport CookieConsent from '../../../lib'\n\nconst Banner = () => (\n  <div\n    id=\"cookiebanner\"\n    className=\"cookiebanner\"\n    aria-label=\"Edit your cookie settings\"\n    role=\"banner\"\n  >\n    <div className=\"info\">\n      <div className=\"title\">Your Cookie Controls</div>\n      <div className=\"description\">\n        Paste some info for your users here. For example a{' '}\n        <a href=\"#0\">link to your privacy policy</a> or something similiar.\n      </div>\n    </div>\n    <div className=\"choices\">\n      <label className=\"choice\" htmlFor=\"choice-functional2\">\n        <input type=\"checkbox\" name=\"choice:functional\" id=\"choice-functional2\" checked />\n        <div className=\"name\">Functional</div>\n        <p className=\"info\">Rejecting will let this banner re-appear on every reload.</p>\n      </label>\n      <label className=\"choice\" htmlFor=\"choice-testest\">\n        <input type=\"checkbox\" name=\"choice:testest\" id=\"choice-testest\" />\n        <div className=\"name\">Test</div>\n        <p className=\"info\">Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>\n      </label>\n    </div>\n    <div className=\"buttons\">\n      <button className=\"reject\">Reject choices</button>\n      <button className=\"accept\">Accept choices</button>\n    </div>\n  </div>\n)\n\nconst Notice = () => (\n  <div\n    id=\"cookienotice\"\n    className=\"cookienotice\"\n    aria-label=\"Show the cookie settings again\"\n    role=\"button\"\n  >\n    <img src=\"/assets/cookie.svg\" alt=\"A shield which represents privacy\" />\n  </div>\n)\n\nconst Consent = () => {\n  useEffect(() => {\n    window.consent = new CookieConsent({\n      capabilities: [\n        {\n          debug: true,\n          name: 'functional',\n          checked: true,\n          onReject: (consent) => {\n            console.log('[functional:onReject]')\n            consent.removeUserOptions()\n            window.location.reload()\n          },\n          onAccept: (consent) => {\n            console.log('[functional:onAccept]')\n            const choices = consent.getChoices()\n            consent.saveUserOptions({ choices, consented: true })\n          },\n          onUpdate: (_, { choice }) => {\n            console.log('[functional:onUpdate] => choice is', choice)\n          },\n          onValueChange: (_, { choice }) => {\n            console.log('[functional:onValueChange] => choice is', choice)\n          },\n        },\n        {\n          name: 'testest',\n          onReject: () => {\n            console.log('[test:onReject]')\n          },\n          onAccept: () => {\n            console.log('[test:onAccept]')\n          },\n          onUpdate: (_, { choice }) => {\n            console.log('[test:onUpdate] => choice is', choice)\n          },\n          onValueChange: (_, { choice }) => {\n            console.log('[test:onValueChange] => choice is', choice)\n          },\n        },\n      ],\n    })\n  })\n\n  return [<Banner key=\"banner\" />, <Notice key=\"notice\" />]\n}\n\nexport default Consent\n"],"sourceRoot":""}